[
    {
        "name": "Comment",
        "scope": "comment, punctuation.definition.comment",
        "foreground": "color(var(foreground) alpha(0.3))"
    },
    {
        "name": "String",
        "scope": "string",
        "foreground": "var(green)"
    },
    {
        "name": "Number",
        "scope": "constant.numeric",
        "foreground": "var()"
    },
    {
        "name": "Constant",
        "scope": "constant.character, constant.other",
        "foreground": "var(magenta)"
    },
    {
        "name": "Variable",
        "scope": "variable.member",
        "foreground": "var(red)"
    },
    {
        "name": "Keyword",
        "scope": "keyword - keyword.operator, keyword.operator.word",
        "foreground": "var(magenta)"
    },
    {
        "name": "Operator",
        "scope": "keyword.operator, constant.other.color, punctuation, meta.tag, punctuation.definition.tag, punctuation.section.embedded, keyword.other.template, keyword.other.substitution",
        "foreground": "var(blue)"
    },
    {
        "name": "Punctuation",
        "scope": "punctuation.terminator, punctuation.section, punctuation.definition.annotation",
        "foreground": "var(cyan)"
    },
    {
        "name": "storage",
        "scope": "storage",
        "foreground": "var(red)"
    },
    {
        "name": "storage type",
        "scope": "storage.type",
        "foreground": "var(magenta)",
        "font_style": "italic"
    },
    {
        "name": "entity name",
        "scope": "entity.name.function",
        "foreground": "var(blue)"
    },
    {
        "name": "inherited class",
        "scope": "entity.other.inherited-class",
        "foreground": "var(cyan)",
        "font_style": "italic underline"
    },
    {
        "name": "function argument",
        "scope": "variable.parameter",
        "foreground": "var()"
    },
    {
        "name": "language variable",
        "scope": "variable.language",
        "foreground": "var(red)",
        "font_style": "italic"
    },
    {
        "name": "tag name",
        "scope": "entity.name.tag",
        "foreground": "var(red)"
    },
    {
        "name": "tag attribute",
        "scope": "entity.other.attribute-name",
        "foreground": "var(magenta)"
    },
    {
        "name": "function call",
        "scope": "variable.function, variable.annotation",
        "foreground": "var(blue)"
    },
    {
        "name": "library function",
        "scope": "support.function, support.macro",
        "foreground": "var(blue)",
        "font_style": "italic"
    },
    {
        "name": "library constant",
        "scope": "support.constant",
        "foreground": "var(magenta)"
    },
    {
        "name": "library class/type",
        "scope": "support.type, support.class",
        "foreground": "var(yellow)"
    },
    {
        "name": "invalid",
        "scope": "invalid",
        "foreground": "var(foreground)",
        "background": "var(red)"
    },
    {
        "name": "invalid deprecated",
        "scope": "invalid.deprecated",
        "foreground": "var(foreground)",
        "background": "var(magenta)"
    },
    {
        "name": "yaml key",
        "scope": "entity.name.tag.yaml",
        "foreground": "var(cyan)"
    },
    {
        "name": "yaml string",
        "scope": "source.yaml string.unquoted",
        "foreground": "var(foreground)"
    },
    {
        "name": "[Diff] Header",
        "scope": "meta.diff, meta.diff.header",
        "foreground": "var(magenta)"
    },
    {
        "scope": "constant.numeric.line-number.match",
        "foreground": "var(red)"
    },
    {
        "scope": "message.error",
        "foreground": "var(red)"
    },
    {
        "name": "number, constant, function argument, tag attribute, embedded",
        "scope": "constant.numeric, constant.language, support.constant, constant.character, variable.parameter, keyword.other.unit",
        "foreground": "var(deep-)"
    },
    {
        "name": "object keys",
        "scope": "string.unquoted.label.js, meta.object-literal.key.js, string.unquoted.label.jsx, meta.object-literal.key.jsx, string.unquoted.label.ts, meta.object-literal.key.ts, meta.function.return-type.ts, meta.function.parameters.ts",
        "foreground": "var(red)"
    }
]
